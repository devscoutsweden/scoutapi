== README

This README would normally document whatever steps are necessary to get the
application up and running.

Things you may want to cover:

* Ruby version

* System dependencies

* Configuration

* Database creation

* Database initialization

* How to run the test suite

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

* ...


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.

== Working with Test Server

0. Log in as devscout on devscout.mikaelsvensson.info using SSH

    devscout@test:~$ cd /home/devscout/rails-apps/scoutapi

1. Get latest source code

    devscout@test:~/rails-apps/scoutapi$ git pull

2. Make sure the database connection string is stored in the environment variable DATABASE_URL.

    devscout@test:~/rails-apps/scoutapi$ export DATABASE_URL=postgresql://USERNAME:PASSWORD@localhost/DATABASE

3. Stop application

    devscout@test:~/rails-apps/scoutapi$ kill -9 $(cat tmp/pids/server.pid)

4. Migrate database and install dependencies

    devscout@test:~/rails-apps/scoutapi$ bundle install

    devscout@test:~/rails-apps/scoutapi$ bin/rake db:migrate

5. Start application in development mode (first option) or test mode (second option)

    devscout@test:~/rails-apps/scoutapi$ bin/rails server -p 10081 -d

    devscout@test:~/rails-apps/scoutapi$ bin/rails server -p 10081 -d -e test

== Working with Heroku

Pushing to Heroku

    $ git push --progress heroku dev:master

    Fetching repository, done.
    Counting objects: 128, done.
    Delta compression using up to 2 threads.
    Compressing objects: 100% (83/83), done.
    Writing objects: 100% (90/90), 11.35 KiB | 0 bytes/s, done.
    Total 90 (delta 46), reused 0 (delta 0)
    -----> Ruby app detected
    -----> Compiling Ruby/Rails
    ...
    -----> Launching... done, v16
           http://infinite-forest-4832.herokuapp.com/ deployed to Heroku
    To git@heroku.com:infinite-forest-4832.git
       ddb6edc..e7b744c  dev -> master

Migrating database

    $ heroku run exec rake db:migrate

    Running `exec rake db:migrate` attached to terminal... up, run.5847
    ...
    Migrating to CreateUserApiKeys (20140927123626)
    == 20140927123626 CreateUserApiKeys: migrating ================================
    -- create_table(:user_api_keys)
       -> 0.3339s
    -- add_reference(:user_api_keys, :user, {:index=>true})
       -> 0.0143s
    -- add_index(:user_api_keys, :key, {:unique=>true})
       -> 0.0084s
    == 20140927123626 CreateUserApiKeys: migrated (0.3571s) =======================

Checking logs

    $ heroku logs

== Versioning of Activities and Comments

The data model is designed to support an unlimited number of revisions/versions
of each activity. The primary benefit of this is that one version can be
"published" while another is being "reviewed". Another benefit is that automatic
data import jobs can add new revisions instead of updating the current revision,
thus preventing the import job from overwriting manual changes made by users.

Since very few people will be interested in old revisions of activities or
comments, the default behaviour should be to always return the latest revision
and nothing else.

Some pieces of data will however not be revision-specific, such as the creator
of an activity or the activity's comments. By default, the API should present
an activity as the "non-versioned activity data merged with the most-recent
versioned data". The user will not be aware that the activity information is
fetched from multiple tables. It should, however, be possible for a user to
explicitly retrieve all revisions of an activity or comment.

== Setting up the test environment

# Checking out source code

[devscout@misc devscout]$ git clone https://github.com/devscoutsweden/scoutapi.git scoutapi-test

# Copying database

  $ pg_dump -Fc scoutapi -U scoutapi > scoutapi.dump
  $ pg_restore -d scoutapi-test scoutapi.dump  -U scoutapi

# Creating unicorn.rb

[devscout@misc scoutapi-test]$ cp ../scoutapi/config/unicorn.rb config/unicorn.rb
[devscout@misc scoutapi-test]$ nano -w config/unicorn.rb
[devscout@misc scoutapi-test]$ cat config/unicorn.rb
working_directory "/var/www/devscout/scoutapi-test"
pid "/var/www/devscout/scoutapi-test/pids/unicorn.pid"
stderr_path "/var/www/devscout/scoutapi-test/log/unicorn.log"
stdout_path "/var/www/devscout/scoutapi-test/log/unicorn.log"
listen "/var/run/unicorn/scoutapi-test.sock"
worker_processes 4
timeout 30

# Installing Ruby dependencies

[devscout@misc scoutapi-test]$ bundle update

[devscout@misc scoutapi-test]$ bundle install

# Creating directory for storing process id file

[devscout@misc scoutapi-test]$ mkdir pids

# Setting database password

[devscout@misc scoutapi-test]$ export SCOUTAPI_TEST_DATABASE_PASSWORD=****************

# Starting server

[devscout@misc scoutapi-test]$ bundle exec unicorn_rails -D -c config/unicorn.rb -E test